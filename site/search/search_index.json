{
    "docs": [
        {
            "location": "/", 
            "text": "Documentation Templates and Best-practices\n\n\nThis document contains templates and examples of how to produce and deploy documentation\nfor projects, tutorials, and workshops. We also provide a summary of best-practices when\ncreating projects on GitHub, README templates, and a list of badges.", 
            "title": "Home"
        }, 
        {
            "location": "/#documentation-templates-and-best-practices", 
            "text": "This document contains templates and examples of how to produce and deploy documentation\nfor projects, tutorials, and workshops. We also provide a summary of best-practices when\ncreating projects on GitHub, README templates, and a list of badges.", 
            "title": "Documentation Templates and Best-practices"
        }, 
        {
            "location": "/readme/", 
            "text": "Templates for Github\n\n\nUse these README templates when creating a GitHub repository.\n\n\n\n\nYou can find the README templates on GitHub or download them here.\n\n\n\n\n\n\nREADME for Software\n\n\nRaw template\n\n\nProject Title\n\n\n\n\n \n\n\n\n\n\n\n\n\nOverview\n\n\nOne paragraph project description goes here.\n\n\nGetting Started\n\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes.\n\n\nPrerequisites\n\n\nWhat things you need to install the software and how to install them\nGive a list with links and how to install using code snippets.\n\n\nbrew install ...\nnpm install\nconda install ...\n\n\n\n\n\nInstalling\n\n\nA step by step on how to install the package.\n\n\nSay what the step will be\n\n\nGive the example\n\n\n\n\n\nAnd repeat\n\n\nuntil finished\n\n\n\n\n\nEnd with an example of getting some data out of the system or using it for a little demo\n\n\nTests\n\n\nExplain how to run the automated tests for this system\n\n\nDeployment\n\n\nAdd additional notes about how to deploy this on a local machine and in a cloud provider.\n\n\nContributing\n\n\nPlease read \nCONTRIBUTING.md\n for details on our code of conduct, and the process for submitting pull requests to us.\n\n\nRelease History\n\n\n\n\n0.4\n\n\n\n\nCHANGES:  \n\n\n\n\n\n\n0.3\n\n\n\n\nCHANGES:\n\n\n\n\nAuthors\n\n\nList authors and affiliation.\n\n\n\n\nREADME for Workshops\n\n\nRaw template\n\n\nWorkshop / Tutorial Title\n\n\n\n\n\n\n\n\nOverview\n\n\nOne Paragraph of project description goes here\n\n\n\n\nDate:\n\nLocation:\n\n\n\n\nGetting started\n\n\nStep by step with code on how to get up and running.\n\n\nReferences\n\n\n\n\n1 .\n\n2 .\n\n\n\n\nAuthors\n\n\nOther workshops and tutorials\n\n\nLinks to other workshops (Documentation and GitHub)  \n\n\n\n\nWorkshop 1\n  \n\n\nWorkshop 2\n  \n\n\nTutorial 1\n\n\n\n\n\n\nBadges\n\n\nList of badges\n\n\nUse the appropriate badges at the top of your README.md file, after the project title.\n\n\nTravis CI\n\n\n[![Travis](https://img.shields.io/travis/compbiocore/REPOSITORY_NAME.svg?style=flat-square)(LINK)\n\n\n\n\n  \n\n\n\n\nCode Coverage\n\n\nCoveralls\n\n\n[![Coveralls](https://img.shields.io/coveralls/compbiocore/REPOSITORY_NAME.svg?style=flat-square)](LINK)\n\n\n\n\n  \n\n\n\n\nCodecov\n\n\n[![coverage](https://img.shields.io/codecov/c/github/compbiocore/REPOSITORY_NAME.svg?style=flat-square)](LINK)\n\n\n\n\n\n\n\n\nDocumentation\n\n\n[![Docs](https://img.shields.io/badge/docs-stable-steelblue.svg?style=flat-square)](https://compbiocore.github.io/REPOSITORY_NAME)\n\n\n\n\n  \n\n\n\n\nJupyter Notebooks\n\n\n[![nbviewer](https://img.shields.io/badge/jupyter_notebooks-nbviewer-purple.svg?style=flat-square)](http://nbviewer.jupyter.org/github/compbiocore/REPOSITORY_NAME/)\n\n\n\n\n\n\n\n\nLicenses\n\n\n[![License](https://img.shields.io/badge/LICENSE_STRING-orange.svg?style=flat-square)](LINK)\n  \n\n\nWhere LICENSE_STRING:\n\n- MIT = \nlicense-MIT\n\n- BSD 3-Clause = \nLicense-BSD%203--Clause\n\n\n\n\n\n\n\n\n\n\nConda\n\n\n[![Conda](https://img.shields.io/conda/v/compbiocore/PACKAGE_NAME.svg?style=flat-square)](https://anaconda.org/compbiocore/PACAKGE_NAME)", 
            "title": "GitHub"
        }, 
        {
            "location": "/readme/#templates-for-github", 
            "text": "Use these README templates when creating a GitHub repository.   You can find the README templates on GitHub or download them here.", 
            "title": "Templates for Github"
        }, 
        {
            "location": "/readme/#readme-for-software", 
            "text": "Raw template", 
            "title": "README for Software"
        }, 
        {
            "location": "/readme/#project-title", 
            "text": "", 
            "title": "Project Title"
        }, 
        {
            "location": "/readme/#overview", 
            "text": "One paragraph project description goes here.", 
            "title": "Overview"
        }, 
        {
            "location": "/readme/#getting-started", 
            "text": "These instructions will get you a copy of the project up and running on your local machine for development and testing purposes.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/readme/#prerequisites", 
            "text": "What things you need to install the software and how to install them\nGive a list with links and how to install using code snippets.  brew install ...\nnpm install\nconda install ...", 
            "title": "Prerequisites"
        }, 
        {
            "location": "/readme/#installing", 
            "text": "A step by step on how to install the package.  Say what the step will be  Give the example  And repeat  until finished  End with an example of getting some data out of the system or using it for a little demo", 
            "title": "Installing"
        }, 
        {
            "location": "/readme/#tests", 
            "text": "Explain how to run the automated tests for this system", 
            "title": "Tests"
        }, 
        {
            "location": "/readme/#deployment", 
            "text": "Add additional notes about how to deploy this on a local machine and in a cloud provider.", 
            "title": "Deployment"
        }, 
        {
            "location": "/readme/#contributing", 
            "text": "Please read  CONTRIBUTING.md  for details on our code of conduct, and the process for submitting pull requests to us.", 
            "title": "Contributing"
        }, 
        {
            "location": "/readme/#release-history", 
            "text": "0.4   CHANGES:      0.3   CHANGES:", 
            "title": "Release History"
        }, 
        {
            "location": "/readme/#authors", 
            "text": "List authors and affiliation.", 
            "title": "Authors"
        }, 
        {
            "location": "/readme/#readme-for-workshops", 
            "text": "Raw template", 
            "title": "README for Workshops"
        }, 
        {
            "location": "/readme/#workshop-tutorial-title", 
            "text": "", 
            "title": "Workshop / Tutorial Title"
        }, 
        {
            "location": "/readme/#overview_1", 
            "text": "One Paragraph of project description goes here   Date: \nLocation:", 
            "title": "Overview"
        }, 
        {
            "location": "/readme/#getting-started_1", 
            "text": "Step by step with code on how to get up and running.", 
            "title": "Getting started"
        }, 
        {
            "location": "/readme/#references", 
            "text": "1 . \n2 .", 
            "title": "References"
        }, 
        {
            "location": "/readme/#authors_1", 
            "text": "", 
            "title": "Authors"
        }, 
        {
            "location": "/readme/#other-workshops-and-tutorials", 
            "text": "Links to other workshops (Documentation and GitHub)     Workshop 1     Workshop 2     Tutorial 1", 
            "title": "Other workshops and tutorials"
        }, 
        {
            "location": "/readme/#badges", 
            "text": "", 
            "title": "Badges"
        }, 
        {
            "location": "/readme/#list-of-badges", 
            "text": "Use the appropriate badges at the top of your README.md file, after the project title.", 
            "title": "List of badges"
        }, 
        {
            "location": "/readme/#travis-ci", 
            "text": "[![Travis](https://img.shields.io/travis/compbiocore/REPOSITORY_NAME.svg?style=flat-square)(LINK)", 
            "title": "Travis CI"
        }, 
        {
            "location": "/readme/#code-coverage", 
            "text": "", 
            "title": "Code Coverage"
        }, 
        {
            "location": "/readme/#coveralls", 
            "text": "[![Coveralls](https://img.shields.io/coveralls/compbiocore/REPOSITORY_NAME.svg?style=flat-square)](LINK)", 
            "title": "Coveralls"
        }, 
        {
            "location": "/readme/#codecov", 
            "text": "[![coverage](https://img.shields.io/codecov/c/github/compbiocore/REPOSITORY_NAME.svg?style=flat-square)](LINK)", 
            "title": "Codecov"
        }, 
        {
            "location": "/readme/#documentation", 
            "text": "[![Docs](https://img.shields.io/badge/docs-stable-steelblue.svg?style=flat-square)](https://compbiocore.github.io/REPOSITORY_NAME)", 
            "title": "Documentation"
        }, 
        {
            "location": "/readme/#jupyter-notebooks", 
            "text": "[![nbviewer](https://img.shields.io/badge/jupyter_notebooks-nbviewer-purple.svg?style=flat-square)](http://nbviewer.jupyter.org/github/compbiocore/REPOSITORY_NAME/)", 
            "title": "Jupyter Notebooks"
        }, 
        {
            "location": "/readme/#licenses", 
            "text": "[![License](https://img.shields.io/badge/LICENSE_STRING-orange.svg?style=flat-square)](LINK)     Where LICENSE_STRING: \n- MIT =  license-MIT \n- BSD 3-Clause =  License-BSD%203--Clause", 
            "title": "Licenses"
        }, 
        {
            "location": "/readme/#conda", 
            "text": "[![Conda](https://img.shields.io/conda/v/compbiocore/PACKAGE_NAME.svg?style=flat-square)](https://anaconda.org/compbiocore/PACAKGE_NAME)", 
            "title": "Conda"
        }, 
        {
            "location": "/mkdocs/", 
            "text": "We use \nMkDocs\n with \nMaterial design\n. MkDocs is a powerful static site\ngenerator. The user only needs to provide Markdown files and a \n.yml\n configuration file\nto get started. The Material theme provides a modern, responsive, and intuitive interface to complex documentation.\n\n\nInstallation\n\n\n\n\nNote that you will need to do this only if you want to build your site locally to preview your docs. You won't be deploying it from your local machine. We use continuous deployment with Travis CI to build and deploy the documentation to GitHub Pages, see \nDeployment\n section.\n\n\n\n\nTo install MkDocs and MkDocs-Material:\n\n\npip install mkdocs mkdocs-material\n\n\n\n\n\nCreate your document files and \nmkdocs.yml\n configuration file (see below), and:\n\n\nmkdocs build\nmkdocs serve\n\n\n\n\n\nNavigate to \nhttp://127.0.0.1:8000/\n to preview your docs.\n\n\nDocumentation Structure\n\n\nThe documentation should go in the \ndocs/\n folder in the root of your GitHub project. Assets like\nimages or with other formats should go in \ndocs/assests\n. The document files should be Markdown.\n\n\nThe organization of the pages in the static site is set in the configuration file \nmkdocs.yml\n, this file also goes in the root of the project.\n\n\nsite_name\n:\n        \nBrown\ns Computational Biology Core\n\n\nsite_author\n:\n      \nFernando Gelin\n\n\nrepo_url\n:\n         \nhttps://github.com/compbiocore/cbc-documentation-templates\n\n\nsite_description\n:\n \nDocumentation templates and best-practices for Brown\ns Computational Biology Core.\n\n\nsite_url\n:\n         \nhttps://compbiocore.github.io/cbc-documentation-templates/\n\n\n\ntheme\n:\n\n  \nname\n:\n \nmaterial\n\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nextra\n\n  \n-\n \ntables\n\n  \n-\n \nfenced_code\n\n  \n-\n \ncodehilite\n\n\n\ndocs_dir\n:\n \ndocs/\n\n\n\npages\n:\n\n  \n-\n \nHome\n:\n \nindex.md\n\n  \n-\n \nGitHub\n:\n \nreadme.md\n\n  \n-\n \nDocumentation\n:\n \nmkdocs.md\n\n\n\n\n\n\nDeployment\n\n\nDocumentation is deployed continuously with \nTravis CI\n, so you don't need to install MkDocs,\nalthough you will have to install it locally if you want to preview your documentation before\nit's deployed.\n\nTo set up continuous deployment to the project's \ngh-pages\n branch, you first need to obtain a GitHub token from GitHub:\n\n\n\nThen, on your project's Travis settings, set the environment variable GITHUB_TOKEN and \nDO NOT\n check the box to display value during build.\n\n\n\nEdit your \n.travis.yml\n file to use matrix, so we can separate the test and build stages as well as use multiple languages for each (MkDocs uses Python).\n\nIn the test stage, add all the tests you are normally running. In the deploy stage, add the the documentation build steps:\n\n\nmatrix\n:\n \n#allows to set up tests/deploys in different languages/environments.\n\n  \ninclude\n:\n \n#includes all stages of build\n\n    \n-\n \nstage\n:\n \ntest\n \n# groups builds by type, add your tests here\n\n      \nlanguage\n:\n \njulia\n\n      \njulia\n:\n\n        \n-\n \n0.6\n\n\n    \n-\n \nstage\n:\n \ndeploy\n \n# this block builds and deploys the docs, it\ns in Python.\n\n      \nlanguage\n:\n \npython\n\n      \ninstall\n:\n\n        \n-\n \npip install mkdocs\n\n        \n-\n \npip install mkdocs-material\n\n      \nscript\n:\n\n        \n-\n \nmkdocs build --verbose --clean --strict\n\n      \ndeploy\n:\n\n       \nprovider\n:\n \npages\n\n       \nskip_cleanup\n:\n \ntrue\n\n       \ngithub_token\n:\n \n$GITHUB_TOKEN\n\n       \nlocal_dir\n:\n \nsite\n\n       \non\n:\n\n         \nbranch\n:\n \nmaster\n\n\n\n\n\n\nTravis will show all stages separately:\n\n\n\nDone! \n\nYour documentation site will be available at \nhttps://compbiocore.github.io/projec-name/\n.", 
            "title": "Documentation"
        }, 
        {
            "location": "/mkdocs/#installation", 
            "text": "Note that you will need to do this only if you want to build your site locally to preview your docs. You won't be deploying it from your local machine. We use continuous deployment with Travis CI to build and deploy the documentation to GitHub Pages, see  Deployment  section.   To install MkDocs and MkDocs-Material:  pip install mkdocs mkdocs-material  Create your document files and  mkdocs.yml  configuration file (see below), and:  mkdocs build\nmkdocs serve  Navigate to  http://127.0.0.1:8000/  to preview your docs.", 
            "title": "Installation"
        }, 
        {
            "location": "/mkdocs/#documentation-structure", 
            "text": "The documentation should go in the  docs/  folder in the root of your GitHub project. Assets like\nimages or with other formats should go in  docs/assests . The document files should be Markdown.  The organization of the pages in the static site is set in the configuration file  mkdocs.yml , this file also goes in the root of the project.  site_name :          Brown s Computational Biology Core  site_author :        Fernando Gelin  repo_url :           https://github.com/compbiocore/cbc-documentation-templates  site_description :   Documentation templates and best-practices for Brown s Computational Biology Core.  site_url :           https://compbiocore.github.io/cbc-documentation-templates/  theme : \n   name :   material  markdown_extensions : \n   -   extra \n   -   tables \n   -   fenced_code \n   -   codehilite  docs_dir :   docs/  pages : \n   -   Home :   index.md \n   -   GitHub :   readme.md \n   -   Documentation :   mkdocs.md", 
            "title": "Documentation Structure"
        }, 
        {
            "location": "/mkdocs/#deployment", 
            "text": "Documentation is deployed continuously with  Travis CI , so you don't need to install MkDocs,\nalthough you will have to install it locally if you want to preview your documentation before\nit's deployed. \nTo set up continuous deployment to the project's  gh-pages  branch, you first need to obtain a GitHub token from GitHub:  Then, on your project's Travis settings, set the environment variable GITHUB_TOKEN and  DO NOT  check the box to display value during build.  Edit your  .travis.yml  file to use matrix, so we can separate the test and build stages as well as use multiple languages for each (MkDocs uses Python). \nIn the test stage, add all the tests you are normally running. In the deploy stage, add the the documentation build steps:  matrix :   #allows to set up tests/deploys in different languages/environments. \n   include :   #includes all stages of build \n     -   stage :   test   # groups builds by type, add your tests here \n       language :   julia \n       julia : \n         -   0.6 \n\n     -   stage :   deploy   # this block builds and deploys the docs, it s in Python. \n       language :   python \n       install : \n         -   pip install mkdocs \n         -   pip install mkdocs-material \n       script : \n         -   mkdocs build --verbose --clean --strict \n       deploy : \n        provider :   pages \n        skip_cleanup :   true \n        github_token :   $GITHUB_TOKEN \n        local_dir :   site \n        on : \n          branch :   master   Travis will show all stages separately:  Done!  \nYour documentation site will be available at  https://compbiocore.github.io/projec-name/ .", 
            "title": "Deployment"
        }
    ]
}